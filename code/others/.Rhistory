required_packages <- c(
"data.table", "dplyr", "magrittr", "tidyr"
)
# Function to check and install missing packages
install_if_missing <- function(packages) {
missing_packages <- packages[!(packages %in% installed.packages()[,"Package"])]
if (length(missing_packages) > 0) {
message("Installing missing packages: ", paste(missing_packages, collapse=", "))
BiocManager::install(missing_packages, ask=FALSE)
}
}
# Ensure BiocManager is installed for Bioconductor packages
if (!requireNamespace("BiocManager", quietly=TRUE)) {
install.packages("BiocManager")
}
# Install missing packages
install_if_missing(required_packages)
# load packages
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(magrittr))
suppressPackageStartupMessages(library(tidyr))
SALA_directory="/analysisdata/fantom6/Interactome/ONT.CAGE.satellite/dorado_run/git_folder/demo_output_local/sala/transcript/Neuron_series_demo"
output_directory="/analysisdata/fantom6/Interactome/ONT.CAGE.satellite/dorado_run/git_folder/demo_output_local/sala/transcript/Neuron_series_demo/log"
ref="/analysisdata/fantom6/Interactome/ONT.CAGE.satellite/dorado_run/git_folder/resources/GENCODE_V39/transcript_to_gene.tsv"
path2 <- paste0(SALA_directory, "/log/")
path3 <- paste0(SALA_directory, "/tmp/")
###### Read log table
info <- list.files(path = path2, pattern = "model.info.tsv.gz")
path2
SALA_directory="/Users/yip/Library/CloudStorage/OneDrive-Personal/Documents/my_gid/SALA/demo_output_local/sala/transcript/Neuron_series_demo"
output_directory="/Users/yip/Library/CloudStorage/OneDrive-Personal/Documents/my_gid/SALA/demo_output_local/sala/transcript/Neuron_series_demo/log"
ref="/Users/yip/Library/CloudStorage/OneDrive-Personal/Documents/my_gid/SALA/resources/GENCODE_V39/transcript_to_gene.tsv"
path2 <- paste0(SALA_directory, "/log/")
path3 <- paste0(SALA_directory, "/tmp/")
###### Read log table
info <- list.files(path = path2, pattern = "model.info.tsv.gz")
transcript_info <- fread(paste0(path2, info[1]), header = TRUE, stringsAsFactors = FALSE)
ref_info <- fread(ref, header = FALSE, stringsAsFactors = FALSE)
files <- list.files(path = path3, pattern = "transcript.info.tsv.gz", recursive = TRUE)
files.names <- sapply(strsplit(files, "\\/"), "[", 1)
files.names
files[4]
i=4
file_info <- file.info(paste0(path3, files[i]))
if (file_info$size == 0) {
print(paste0("Skipping empty file: ", files[i]))
}
read_info=fread(paste0(path3,files[i]), header=F, stringsAsFactors = F, select=c(1,4,7))
file_info$size
# List of required packages
required_packages <- c(
"Biostrings", "GenomicRanges", "Rsamtools",
"data.table", "dplyr", "magrittr", "tidyr"
)
# Function to check and install missing packages
install_if_missing <- function(packages) {
missing_packages <- packages[!(packages %in% installed.packages()[,"Package"])]
if (length(missing_packages) > 0) {
message("Installing missing packages: ", paste(missing_packages, collapse=", "))
BiocManager::install(missing_packages, ask=FALSE)
}
}
# Ensure BiocManager is installed for Bioconductor packages
if (!requireNamespace("BiocManager", quietly=TRUE)) {
install.packages("BiocManager")
}
# Install missing packages
install_if_missing(required_packages)
# load packages
suppressPackageStartupMessages(library(Biostrings))
suppressPackageStartupMessages(library(GenomicRanges))
suppressPackageStartupMessages(library(Rsamtools))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(magrittr))
suppressPackageStartupMessages(library(tidyr))
